<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.uestc.ostec.workload.dao.ItemDao">
    <resultMap id="itemResultMap" type="cn.edu.uestc.ostec.workload.pojo.Item">
        <id column="item_id" property="itemId" jdbcType="INTEGER"/>
        <result column="item_name" property="itemName" jdbcType="VARCHAR"/>
        <result column="category_id" property="categoryId" jdbcType="INTEGER"/>
        <result column="owner_id" property="ownerId" jdbcType="INTEGER"/>
        <result column="json_parameter" property="jsonParameter" jdbcType="VARCHAR"/>
        <result column="workload" property="workload" jdbcType="DOUBLE"/>
        <result column="group_manager_id" property="groupManagerId" jdbcType="INTEGER"/>
        <result column="apply_desc" property="applyDesc" jdbcType="VARCHAR"/>
        <result column="job_desc" property="jobDesc" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="json_child_weight" property="jsonChildWeight" jdbcType="VARCHAR"/>
        <result column="proof" property="proof" jdbcType="INTEGER"/>
        <result column="is_group" property="isGroup" jdbcType="INTEGER"/>
        <result column="other_json" property="otherJson" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="VARCHAR"/>
        <result column="category_code" property="categoryCode" jdbcType="VARCHAR" />
        <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Base_Column_List">
    item_id, item_name, category_id, owner_id, json_parameter, workload, group_manager_id, apply_desc,
    job_desc, status, json_child_weight,proof,is_group,other_json,version,category_code,parent_id
  </sql>

    <select id="select" resultMap="itemResultMap">
        select
        <include refid="Base_Column_List"/>
        from item
        where item_id = #{itemId,jdbcType=INTEGER} and version = #{version}
    </select>

    <delete id="delete">
    delete from item
    where item_id = #{itemId,jdbcType=INTEGER} and version = #{version}
  </delete>

    <insert id="insert">
        insert into item (<include refid="Base_Column_List"/>)
        values (#{itemId,jdbcType=INTEGER},
        #{itemName,jdbcType=VARCHAR},
        #{categoryId,jdbcType=INTEGER},
        #{ownerId,jdbcType=INTEGER},
        #{jsonParameter,jdbcType=VARCHAR},
        #{workload,jdbcType=DOUBLE},
        #{groupManagerId,jdbcType=INTEGER},
        #{applyDesc,jdbcType=VARCHAR},
        #{jobDesc,jdbcType=VARCHAR},
        #{status,jdbcType=INTEGER},
        #{jsonChildWeight,jdbcType=VARCHAR},
        #{proof,jdbcType=INTEGER},
        #{isGroup,jdbcType=INTEGER},
        #{otherJson,jdbcType=VARCHAR},
        #{version},
        #{categoryCode},
        #{parentId})
    </insert>

    <update id="update">
    update item
    set item_name = #{itemName,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      owner_id = #{ownerId,jdbcType=INTEGER},
      json_parameter = #{jsonParameter,jdbcType=VARCHAR},
      workload = #{workload,jdbcType=DOUBLE},
      group_manager_id = #{groupManagerId,jdbcType=INTEGER},
      apply_desc = #{applyDesc,jdbcType=VARCHAR},
      job_desc = #{jobDesc,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      json_child_weight = #{jsonChildWeight,jdbcType=VARCHAR},
      proof = #{proof,jdbcType=INTEGER},
      is_group = #{isGroup,jdbcType=INTEGER},
      other_json = #{otherJson,jdbcType=VARCHAR},
      category_code = #{categoryCode},
      parent_id = #{parentId}
    where item_id = #{itemId,jdbcType=INTEGER} and version = #{version}
  </update>

    <select id="selectItemsByStatus" resultMap="itemResultMap">
        select
        <include refid="Base_Column_List"/>
        from item
        where status = #{status,jdbcType=INTEGER} and owner_id = #{ownerId,jdbcType=INTEGER} and
        version = #{version}
    </select>

    <update id="updateStatus">
    update item
    set status = #{status,jdbcType=INTEGER}
    where item_id = #{itemId,jdbcType=INTEGER} and version = #{version}
  </update>

    <select id="selectItemsByCategory" resultMap="itemResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM item
        WHERE category_id = #{categoryId} AND status = #{status} and version = #{version}
    </select>

    <select id="selectValidItemByCategory" resultMap="itemResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM item
        <where>
          category_id = #{categoryId} AND status != -1 and version = #{version}
          <if test="null != parentId">
              AND parent_id = #{parentId}
          </if>
        </where>
    </select>

    <select id="selectAll" resultMap="itemResultMap">
        SELECT
        DISTINCT item_id, item_name, item.category_id, owner_id, json_parameter, workload, group_manager_id, apply_desc,
        job_desc, item.status, json_child_weight,proof,is_group,item.other_json,item.version
        FROM item,category
        <where>
            item.status != -1 AND item.status != 0 AND item.version = #{version}
            <if test="null != categoryId">
                AND item.category_id = #{categoryId}
            </if>
            <if test="null != status">
                AND item.status = #{status}
            </if>
            <if test="null != ownerId">
                AND owner_id = #{ownerId}
            </if>
            <if test="null != isGroup">
                AND is_group = #{isGroup}
            </if>
            <if test="null != groupManagerId">
                AND item.group_manager_id = #{groupManagerId}
            </if>
            <if test="null != itemName">
                AND item_name LIKE CONCAT(CONCAT('%', #{itemName}), '%')
            </if>
            <if test="null != importedRequired">
                AND item.category_id = category.category_id
                AND item.version = category.version
                AND category.import_required = #{importedRequired}
            </if>
        </where>
    </select>

    <select id="selectWorkload" resultType="cn.edu.uestc.ostec.workload.dto.TotalWorkloadAndCount">
        SELECT SUM(workload) workload,COUNT(workload) count FROM item
        <where>
            owner_id = #{teacherId} AND version = #{version}
            <if test="null != status">
                AND status = #{status}
            </if>
            <if test="null == status">
                AND (status = 1 OR status = 3 OR status = 4)
            </if>
        </where>

    </select>

    <select id="selectWorkloadForAnalyze" resultType="Double">
        SELECT SUM(workload) workload FROM item
        <where>
            owner_id = #{teacherId} AND version = #{version}
            <if test="null != status">
                AND status = #{status}
            </if>
            <if test="null == status">
                AND (status = 1 OR status = 3 OR status = 4)
            </if>
            AND category_code LIKE CONCAT(#{type},'%')
        </where>
    </select>

    <select id="selectItemsByAnalyzeType" resultMap="itemResultMap">
        SELECT * FROM item
        <where>
            owner_id = #{teacherId} AND version = #{version}
            <if test="null != status">
                AND status = #{status}
            </if>
            <if test="null == status">
                AND (status = 1 OR status = 3 OR status = 4)
            </if>
            AND category_code LIKE CONCAT(#{type},'%')
        </where>
    </select>

    <select id="selectChild" resultMap="itemResultMap" >
        SELECT * FROM item WHERE parent_id = #{parentId} AND version = #{version}
    </select>

</mapper>