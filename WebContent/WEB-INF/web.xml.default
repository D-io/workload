<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <display-name>workload</display-name>
  <!-- 系统参数配置 -->
  <context-param>
    <description>单点登出服务器地址</description>
    <param-name>casServerContextPath</param-name>
    <param-value>https://portal.ostec.wshugen.cn:8443/authcas</param-value>
  </context-param>
  
  <!-- 文件上传路径配置 BEGIN -->
  <context-param>
    <param-name>fileUploadPath</param-name>
    <param-value>data</param-value>
  </context-param>
  <!-- 文件上传路径配置 END -->

  <!-- 启动内置的应用监听器、session监听器 BEGIN -->
  <listener>
    <listener-class>cn.edu.uestc.ostec.workload.core.WorkloadServletContextListener</listener-class>
  </listener>
  <listener>
    <listener-class>cn.edu.uestc.ostec.workload.core.WorkloadSessionListener</listener-class>
  </listener>
  <!-- 启动内置的应用监听器、session监听器 END -->

  <!-- 配置 request 上下文监听器 -->
  <listener>
    <listener-class>
      org.springframework.web.context.request.RequestContextListener
    </listener-class>
  </listener>

  <!-- Spring IOC BEGIN -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring_config/spring-mybatis.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- Spring IOC END -->

  <!--  CAS logout configuration BEGIN -->
  <listener>
    <description>用于单点退出，该过滤器用于实现单点登出功能，可选配置</description>
    <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
  </listener>

  <filter>
    <description>该过滤器用于实现单点登出功能，可选配置(该Filter需要放在所有其他Filter之前)</description>
    <filter-name>CASSingleSignOutFilter</filter-name>
    <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
    <!-- 设置单点登出的URL前缀 -->
    <init-param>
      <param-name>casServerUrlPrefix</param-name>
      <param-value>https://portal.ostec.wshugen.cn:8443/authcas/</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>CASSingleSignOutFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!--  CAS logout configuration END -->


  <!--  CAS login configuration BEGIN -->
  <filter>
    <filter-name>CASFilter</filter-name>
    <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
    <!-- CAS认证服务器登陆URL -->
    <init-param>
      <param-name>casServerLoginUrl</param-name>
      <param-value>https://portal.ostec.wshugen.cn:8443/authcas/login</param-value>
    </init-param>
    <!-- 服务器名 -->
    <init-param>
      <param-name>serverName</param-name>
      <param-value>http://202.115.16.81:8080</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CASFilter</filter-name>
    <url-pattern>/auth/login</url-pattern>
  </filter-mapping>

  <!--该过滤器负责对Ticket的校验工作，必须启用它 -->
  <filter>
    <filter-name>CASValidationFilter</filter-name>
    <filter-class>
      org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter
    </filter-class>
    <!-- CAS认证服务器地址 -->
    <init-param>
      <param-name>casServerUrlPrefix</param-name>
      <param-value>https://portal.ostec.wshugen.cn:8443/authcas</param-value>
    </init-param>
    <!-- 请求认证的服务器 -->
    <init-param>
      <param-name>serverName</param-name>
      <param-value>http://202.115.16.81:8080</param-value>
    </init-param>
    <!-- 信任库配置 -->
    <init-param>
      <param-name>sslConfigFile</param-name>
      <param-value>/home/zjs/sslConf/sslconf.properties</param-value>
    </init-param>
    <!-- 编码配置 -->
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>

  </filter>
  <filter-mapping>
    <filter-name>CASValidationFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--
      该过滤器负责实现HttpServletRequest请求的包裹，
      比如允许开发者通过HttpServletRequest的getRemoteUser()方法
      获得SSO登录用户的登录名，可选配置。
  -->
  <filter>
    <filter-name>CASHttpServletRequestWrapperFilter</filter-name>
    <filter-class>
      org.jasig.cas.client.util.HttpServletRequestWrapperFilter
    </filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CASHttpServletRequestWrapperFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--
      该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。
      比如AssertionHolder.getAssertion().getPrincipal().getName()。
  -->
  <filter>
    <filter-name>CASAssertionThreadLocalFilter</filter-name>
    <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CASAssertionThreadLocalFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!--  CAS login configuration END -->

  <!-- Spring MVC BEGIN -->
  <servlet>
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring_config/spring-mvc.xml</param-value>
    </init-param>
    <!-- 文件上传配置 -->
    <multipart-config>
      <max-file-size>52428800</max-file-size>
      <max-request-size>52428800</max-request-size>
      <file-size-threshold>0</file-size-threshold>
    </multipart-config>
  </servlet>
  <servlet-mapping>
    <servlet-name>dispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  <!-- Spring MVC END -->

</web-app>